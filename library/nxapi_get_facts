#!/usr/bin/env python2.7

# Copyright (c) 2014 Matt Oswalt
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at:
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied. See the License for the specific language governing
# permissions and limitations under the License.

DOCUMENTATION = '''
---
module: nxapi_get_facts
author: Matt Oswalt
version_added: 1.0
short_description: Retrieve Nexus 9000 device facts
description:
    - Nexus 9000 facts returns as a JSON dictionary, includes items
      such as hardware/firmware information, running protocols, existing routes
requirements:
    - Mierdin's fork of nexus9000 https://github.com/Mierdin/nexus9000
options:
    host:
        description:
            - should be {{ inventory_hostname }}
        required: true  
    user:
        description:
            - login user-name 
        required: true
        default: "admin"
    passwd:
        description:
            - login password
        required: true 
        default: assumes ssh-key              
    logfile:
        description:
            - location for log file
        required: false 
        default: None        
'''

EXAMPLES = '''
# pulling down facts via NX-API

- nxapi_get_facts:
    host={{ inventory_hostname }}
    user="admin"
    passwd="cisco"
    logfile="insieme.log"
  register: insieme

# accessing the facts

- name: NX-OS version
  debug: msg="{{ insieme.facts.HWFW.rr_sys_ver }}"
'''

from nxos.nxapi.utils.nxapi_utils import NXAPI
#rom collections import OrderedDict
#from array import *
import logging
import json
#from os.path import isfile
#import os
#import sys

def getHWFW(thisNXAPI):
    thisNXAPI.set_cmd('show version')
    returnList = thisNXAPI.send_req()
    returnDict = json.loads(returnList[1])
    return returnDict['ins_api']['outputs']['output']['body']

def getRoutes(thisNXAPI):
    thisNXAPI.set_cmd('show ip route')
    returnList = thisNXAPI.send_req()
    returnDict = json.loads(returnList[1])
    return returnDict['ins_api']['outputs']['output']['body']['TABLE_vrf']

def main():
    module = AnsibleModule(
        argument_spec=dict( \
            host=dict(required=True), \
            user=dict(required=False, default='admin'), \
            passwd=dict(required=False, default=None), \
            logfile=dict(required=False, default=None)), \
        supports_check_mode=False)

    m_args = module.params
    m_results = dict(changed=False)

    #Configure logging
    logfile = module.params.get('logfile')
    if logfile is not None:
        logging.basicConfig(filename=logfile, level=logging.INFO, \
          format='%(asctime)s:%(name)s:%(message)s')
        logging.getLogger().name = 'CONFIG:'+m_args['host']

    logging.info("Connecting to host: {}".format(m_args['host']))

    thisNXAPI = NXAPI()
    thisNXAPI.set_target_url('http://' + m_args['host'] + '/ins')
    thisNXAPI.set_username(m_args['user'])
    thisNXAPI.set_password(m_args['passwd'])
    thisNXAPI.set_out_format('json')
    thisNXAPI.set_msg_type('cli_show')

    factDict = dict()
    factDict['HWFW'] = getHWFW(thisNXAPI)
    factDict['routes'] = getRoutes(thisNXAPI)
    
    m_results['facts'] = factDict

    m_results['args'] = m_args        # for debug
    module.exit_json(**m_results)

from ansible.module_utils.basic import *
main()


